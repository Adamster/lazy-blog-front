/* tslint:disable */
/* eslint-disable */
/**
 * Lazy.App | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResponse } from './UserResponse';
import {
    UserResponseFromJSON,
    UserResponseFromJSONTyped,
    UserResponseToJSON,
    UserResponseToJSONTyped,
} from './UserResponse';

/**
 * 
 * @export
 * @interface CommentResponse
 */
export interface CommentResponse {
    /**
     * 
     * @type {string}
     * @memberof CommentResponse
     */
    id: string;
    /**
     * 
     * @type {UserResponse}
     * @memberof CommentResponse
     */
    user: UserResponse;
    /**
     * 
     * @type {string}
     * @memberof CommentResponse
     */
    userAvatarUrl: string;
    /**
     * 
     * @type {string}
     * @memberof CommentResponse
     */
    body: string;
    /**
     * 
     * @type {Date}
     * @memberof CommentResponse
     */
    createdAtUtc: Date;
}

/**
 * Check if a given object implements the CommentResponse interface.
 */
export function instanceOfCommentResponse(value: object): value is CommentResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('userAvatarUrl' in value) || value['userAvatarUrl'] === undefined) return false;
    if (!('body' in value) || value['body'] === undefined) return false;
    if (!('createdAtUtc' in value) || value['createdAtUtc'] === undefined) return false;
    return true;
}

export function CommentResponseFromJSON(json: any): CommentResponse {
    return CommentResponseFromJSONTyped(json, false);
}

export function CommentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': UserResponseFromJSON(json['user']),
        'userAvatarUrl': json['userAvatarUrl'],
        'body': json['body'],
        'createdAtUtc': (new Date(json['createdAtUtc'])),
    };
}

export function CommentResponseToJSON(json: any): CommentResponse {
    return CommentResponseToJSONTyped(json, false);
}

export function CommentResponseToJSONTyped(value?: CommentResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'user': UserResponseToJSON(value['user']),
        'userAvatarUrl': value['userAvatarUrl'],
        'body': value['body'],
        'createdAtUtc': ((value['createdAtUtc']).toISOString()),
    };
}

